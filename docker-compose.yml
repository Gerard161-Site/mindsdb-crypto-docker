
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mindsdb
      POSTGRES_USER: mindsdb
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mindsdb_secure_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - mindsdb_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindsdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_pass}
    volumes:
      - redis_data:/data
    networks:
      - mindsdb_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  mindsdb:
    build: .
    environment:
      - MINDSDB_STORAGE_PATH=/opt/mindsdb
      - MINDSDB_CONFIG_PATH=/opt/mindsdb/config/config.json
      - MINDSDB_APIS=http,mysql,mongodb,mcp
      - MINDSDB_MCP_ACCESS_TOKEN=${MCP_ACCESS_TOKEN:-your_secure_mcp_token}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mindsdb
      - POSTGRES_USER=mindsdb
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mindsdb_secure_pass}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secure_pass}
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
      - DEFILLAMA_API_KEY=${DEFILLAMA_API_KEY}
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - mindsdb_data:/opt/mindsdb
      - ./logs:/opt/mindsdb/logs
      - ./config:/opt/mindsdb/config
      - ./agents:/opt/mindsdb/agents
    networks:
      - mindsdb_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:47334/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - mindsdb_network
    depends_on:
      - mindsdb
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - mindsdb_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - mindsdb_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mindsdb_data:
  prometheus_data:
  grafana_data:

networks:
  mindsdb_network:
    driver: bridge
